<?php

/*
 * Auto-generated by libasynql-fx
 * Created from stmt.sql, stmt.sql
 */

declare(strict_types=1);

namespace JavierLeon9966\Alias;

use Generator;
use poggit\libasynql\DataConnector;
use SOFe\AwaitGenerator\Await;

final class RawQueries{
	public function __construct(private DataConnector $conn) {}

	/**
	 * <h4>Declared in:</h4>
	 * - resources/mysql/stmt.sql:95
	 * - resources/sqlite/stmt.sql:111
	 * @param string $username
	 * @param string $address
	 * @return Generator<mixed, 'all'|'once'|'race'|'reject'|'resolve'|array{'resolve'}|Generator<mixed, mixed, mixed, mixed>|null, mixed, int>
	 */
	public function addAddress(string $username, string $address, ) : Generator {
		$this->conn->executeInsert("alias.add.address", ["username" => $username, "address" => $address, ], yield Await::RESOLVE, yield Await::REJECT);
		return yield Await::ONCE;
	}

	/**
	 * <h4>Declared in:</h4>
	 * - resources/mysql/stmt.sql:101
	 * - resources/sqlite/stmt.sql:117
	 * @param string $username
	 * @param int $clientRandomId
	 * @return Generator<mixed, 'all'|'once'|'race'|'reject'|'resolve'|array{'resolve'}|Generator<mixed, mixed, mixed, mixed>|null, mixed, int>
	 */
	public function addClientRandomId(string $username, int $clientRandomId, ) : Generator {
		$this->conn->executeInsert("alias.add.client_random_id", ["username" => $username, "clientRandomId" => $clientRandomId, ], yield Await::RESOLVE, yield Await::REJECT);
		return yield Await::ONCE;
	}

	/**
	 * <h4>Declared in:</h4>
	 * - resources/mysql/stmt.sql:107
	 * - resources/sqlite/stmt.sql:123
	 * @param string $username
	 * @param string $deviceId
	 * @return Generator<mixed, 'all'|'once'|'race'|'reject'|'resolve'|array{'resolve'}|Generator<mixed, mixed, mixed, mixed>|null, mixed, int>
	 */
	public function addDeviceId(string $username, string $deviceId, ) : Generator {
		$this->conn->executeInsert("alias.add.device_id", ["username" => $username, "deviceId" => $deviceId, ], yield Await::RESOLVE, yield Await::REJECT);
		return yield Await::ONCE;
	}

	/**
	 * <h4>Declared in:</h4>
	 * - resources/mysql/stmt.sql:89
	 * - resources/sqlite/stmt.sql:105
	 * @param string $username
	 * @return Generator<mixed, 'all'|'once'|'race'|'reject'|'resolve'|array{'resolve'}|Generator<mixed, mixed, mixed, mixed>|null, mixed, int>
	 */
	public function addKnownPlayer(string $username, ) : Generator {
		$this->conn->executeInsert("alias.add.known_player", ["username" => $username, ], yield Await::RESOLVE, yield Await::REJECT);
		return yield Await::ONCE;
	}

	/**
	 * <h4>Declared in:</h4>
	 * - resources/mysql/stmt.sql:113
	 * - resources/sqlite/stmt.sql:129
	 * @param string $username
	 * @param string $xuid
	 * @return Generator<mixed, 'all'|'once'|'race'|'reject'|'resolve'|array{'resolve'}|Generator<mixed, mixed, mixed, mixed>|null, mixed, int>
	 */
	public function addXuid(string $username, string $xuid, ) : Generator {
		$this->conn->executeInsert("alias.add.xuid", ["username" => $username, "xuid" => $xuid, ], yield Await::RESOLVE, yield Await::REJECT);
		return yield Await::ONCE;
	}

	/**
	 * <h4>Declared in:</h4>
	 * - resources/mysql/stmt.sql:54
	 * - resources/sqlite/stmt.sql:54
	 * @return Generator<mixed, 'all'|'once'|'race'|'reject'|'resolve'|array{'resolve'}|Generator<mixed, mixed, mixed, mixed>|null, mixed, int>
	 */
	public function deleteOldPlayers() : Generator {
		$this->conn->executeChange("alias.delete_old_players", [], yield Await::RESOLVE, yield Await::REJECT);
		return yield Await::ONCE;
	}

	/**
	 * <h4>Declared in:</h4>
	 * - resources/mysql/stmt.sql:62
	 * - resources/sqlite/stmt.sql:66
	 * @param string $username
	 * @param ?string $extraAddress
	 * @return Generator<mixed, 'all'|'once'|'race'|'reject'|'resolve'|array{'resolve'}|Generator<mixed, mixed, mixed, mixed>|null, mixed, list<array<string, mixed>>>
	 */
	public function getAltAddress(string $username, ?string $extraAddress, ) : Generator {
		$this->conn->executeSelect("alias.get_alt.address", ["username" => $username, "extraAddress" => $extraAddress, ], yield Await::RESOLVE, yield Await::REJECT);
		return yield Await::ONCE;
	}

	/**
	 * <h4>Declared in:</h4>
	 * - resources/mysql/stmt.sql:69
	 * - resources/sqlite/stmt.sql:77
	 * @param string $username
	 * @param ?int $extraClientRandomId
	 * @return Generator<mixed, 'all'|'once'|'race'|'reject'|'resolve'|array{'resolve'}|Generator<mixed, mixed, mixed, mixed>|null, mixed, list<array<string, mixed>>>
	 */
	public function getAltClientRandomId(string $username, ?int $extraClientRandomId, ) : Generator {
		$this->conn->executeSelect("alias.get_alt.client_random_id", ["username" => $username, "extraClientRandomId" => $extraClientRandomId, ], yield Await::RESOLVE, yield Await::REJECT);
		return yield Await::ONCE;
	}

	/**
	 * <h4>Declared in:</h4>
	 * - resources/mysql/stmt.sql:76
	 * - resources/sqlite/stmt.sql:88
	 * @param string $username
	 * @param ?string $extraDeviceId
	 * @return Generator<mixed, 'all'|'once'|'race'|'reject'|'resolve'|array{'resolve'}|Generator<mixed, mixed, mixed, mixed>|null, mixed, list<array<string, mixed>>>
	 */
	public function getAltDeviceId(string $username, ?string $extraDeviceId, ) : Generator {
		$this->conn->executeSelect("alias.get_alt.device_id", ["username" => $username, "extraDeviceId" => $extraDeviceId, ], yield Await::RESOLVE, yield Await::REJECT);
		return yield Await::ONCE;
	}

	/**
	 * <h4>Declared in:</h4>
	 * - resources/mysql/stmt.sql:83
	 * - resources/sqlite/stmt.sql:99
	 * @param string $username
	 * @param ?string $extraXuid
	 * @return Generator<mixed, 'all'|'once'|'race'|'reject'|'resolve'|array{'resolve'}|Generator<mixed, mixed, mixed, mixed>|null, mixed, list<array<string, mixed>>>
	 */
	public function getAltXuid(string $username, ?string $extraXuid, ) : Generator {
		$this->conn->executeSelect("alias.get_alt.xuid", ["username" => $username, "extraXuid" => $extraXuid, ], yield Await::RESOLVE, yield Await::REJECT);
		return yield Await::ONCE;
	}

	/**
	 * <h4>Declared in:</h4>
	 * - resources/mysql/stmt.sql:23
	 * - resources/sqlite/stmt.sql:23
	 * @return Generator<mixed, 'all'|'once'|'race'|'reject'|'resolve'|array{'resolve'}|Generator<mixed, mixed, mixed, mixed>|null, mixed, int>
	 */
	public function initAddress() : Generator {
		$this->conn->executeChange("alias.init.address", [], yield Await::RESOLVE, yield Await::REJECT);
		return yield Await::ONCE;
	}

	/**
	 * <h4>Declared in:</h4>
	 * - resources/mysql/stmt.sql:31
	 * - resources/sqlite/stmt.sql:31
	 * @return Generator<mixed, 'all'|'once'|'race'|'reject'|'resolve'|array{'resolve'}|Generator<mixed, mixed, mixed, mixed>|null, mixed, int>
	 */
	public function initClientRandomId() : Generator {
		$this->conn->executeChange("alias.init.client_random_id", [], yield Await::RESOLVE, yield Await::REJECT);
		return yield Await::ONCE;
	}

	/**
	 * <h4>Declared in:</h4>
	 * - resources/mysql/stmt.sql:39
	 * - resources/sqlite/stmt.sql:39
	 * @return Generator<mixed, 'all'|'once'|'race'|'reject'|'resolve'|array{'resolve'}|Generator<mixed, mixed, mixed, mixed>|null, mixed, int>
	 */
	public function initDeviceId() : Generator {
		$this->conn->executeChange("alias.init.device_id", [], yield Await::RESOLVE, yield Await::REJECT);
		return yield Await::ONCE;
	}

	/**
	 * <h4>Declared in:</h4>
	 * - resources/mysql/stmt.sql:15
	 * - resources/sqlite/stmt.sql:15
	 * @return Generator<mixed, 'all'|'once'|'race'|'reject'|'resolve'|array{'resolve'}|Generator<mixed, mixed, mixed, mixed>|null, mixed, int>
	 */
	public function initKnownPlayers() : Generator {
		$this->conn->executeChange("alias.init.known_players", [], yield Await::RESOLVE, yield Await::REJECT);
		return yield Await::ONCE;
	}

	/**
	 * <h4>Declared in:</h4>
	 * - resources/mysql/stmt.sql:10
	 * - resources/sqlite/stmt.sql:10
	 * @return Generator<mixed, 'all'|'once'|'race'|'reject'|'resolve'|array{'resolve'}|Generator<mixed, mixed, mixed, mixed>|null, mixed, int>
	 */
	public function initOldPlayers() : Generator {
		$this->conn->executeChange("alias.init.old_players", [], yield Await::RESOLVE, yield Await::REJECT);
		return yield Await::ONCE;
	}

	/**
	 * <h4>Declared in:</h4>
	 * - resources/mysql/stmt.sql:46
	 * - resources/sqlite/stmt.sql:46
	 * @return Generator<mixed, 'all'|'once'|'race'|'reject'|'resolve'|array{'resolve'}|Generator<mixed, mixed, mixed, mixed>|null, mixed, int>
	 */
	public function initXuid() : Generator {
		$this->conn->executeChange("alias.init.xuid", [], yield Await::RESOLVE, yield Await::REJECT);
		return yield Await::ONCE;
	}

	/**
	 * <h4>Declared in:</h4>
	 * - resources/mysql/stmt.sql:51
	 * - resources/sqlite/stmt.sql:51
	 * @return Generator<mixed, 'all'|'once'|'race'|'reject'|'resolve'|array{'resolve'}|Generator<mixed, mixed, mixed, mixed>|null, mixed, list<array<string, mixed>>>
	 */
	public function loadOldPlayers() : Generator {
		$this->conn->executeSelect("alias.load_old_players", [], yield Await::RESOLVE, yield Await::REJECT);
		return yield Await::ONCE;
	}
}
